name: Deploy
on:
  push:
    branches:
      - develop
      - main
      - build-test

env:
  S3_BUCKET_NAME: til-web
  CODE_DEPLOY_APPLICATION_NAME: til_web
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME_DEV: til_fe_dev
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME_PROD: til_fe_prod
jobs:
  build:
    environment:
      name: ${{ github.ref == 'refs/heads/build-test' && 'develop' || 'Production' }}
    runs-on: ubuntu-latest
    steps:
      - name: Check Environment Name
        run: |
          echo "Environment Name: ${{ env.ENV_NAME }}"

      - name: Checkout source code.
        uses: actions/checkout@v3

      - name: Check Node v
        run: node -v

      - name: Generate Environment Variables File
        run: |
          echo "NEXT_PUBLIC_MODE=$NEXT_PUBLIC_MODE" >> .env.development
          echo "NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL" >> .env.development
          echo "NEXT_PUBLIC_GOOGLE_LOGIN_CLIENT_ID=$NEXT_PUBLIC_GOOGLE_LOGIN_CLIENT_ID" >> .env.development
          echo "NEXT_PUBLIC_GOOGLE_LOGIN_REDIRECT_URI=$NEXT_PUBLIC_GOOGLE_LOGIN_REDIRECT_URI" >> .env.development
          echo "NEXT_PUBLIC_GOOGLE_LOGIN_CLIENT_PW=$NEXT_PUBLIC_GOOGLE_LOGIN_CLIENT_PW" >> .env.development
        env:
          NEXT_PUBLIC_MODE: ${{ secrets.NEXT_PUBLIC_MODE }}
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_GOOGLE_LOGIN_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_GOOGLE_LOGIN_CLIENT_ID }}
          NEXT_PUBLIC_GOOGLE_LOGIN_REDIRECT_URI: ${{ secrets.NEXT_PUBLIC_GOOGLE_LOGIN_REDIRECT_URI }}
          NEXT_PUBLIC_GOOGLE_LOGIN_CLIENT_PW: ${{ secrets.NEXT_PUBLIC_GOOGLE_LOGIN_CLIENT_PW }}

      - name: Cache node modules
        uses: actions/cache@v3
        # 해당 step을 대표하는 id를 설정할 수도 있어요.
        # 해당 값은 뒤의 step에서 사용해볼게요.
        id: cache
        with:
          # node_modules라는 폴더를 검사하여
          path: node_modules
          # 아래 키값으로 cache가 돼있는지 확인합니다.
          key: npm-packages-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Build
        run: |
          if [ "${{ github.ref }}" = "refs/heads/build-test" ]; then
            npm run build
          elif [ "${{ github.ref }}" = "refs/heads/main" ]; then
            npm run build:dev
          fi

      - name: zip create
        run: |
          if [ "${{ github.ref }}" = "refs/heads/build-test" ]; then
            zip -qq -r --symlinks  ./til-dev.zip .
          elif [ "${{ github.ref }}" = "refs/heads/main" ]; then
            zip -qq -r --symlinks  ./til-prod.zip .
          fi
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: |
          if [ "${{ github.ref }}" = "refs/heads/build-test" ]; then
            aws s3 cp --region ap-northeast-2 ./til-dev.zip s3://$S3_BUCKET_NAME/til-dev.zip
          elif [ "${{ github.ref }}" = "refs/heads/main" ]; then
            aws s3 cp --region ap-northeast-2 ./til-prod.zip s3://$S3_BUCKET_NAME/til-prod.zip
          fi

      - name: Deploy For Development
        if: github.ref == 'refs/heads/build-test'
        run: |
          aws deploy create-deployment \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME_DEV }} \
          --s3-location bucket=$S3_BUCKET_NAME,key=til-dev.zip,bundleType=zip

      - name: Deploy For Production
        if: github.ref == 'refs/heads/main'
        run: |
          aws deploy create-deployment \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME_PROD }} \
          --s3-location bucket=$S3_BUCKET_NAME,key=til-prod.zip,bundleType=zip
